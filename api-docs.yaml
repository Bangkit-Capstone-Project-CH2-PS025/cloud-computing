openapi: 3.1.0
info:
  title: Itinergo API
  description: Welcome to Itinergo API Documentation
  version: 0.0.1

servers:
  - url: http://localhost:8000
    description: Localhost
  - url: http://35.184.3.42:3000
    description: Deployment

tags:
  - name: Authentication
    description: Authentication API
  - name: Find Trip
    description: Find Trip API
  - name: Itinerary Plans
    description: Itinerary Plans API
  - name: Level Travelers
    description: Level Travelers API
  - name: Profile
    description: Profile API
  - name: Recommendation System
    description: Recommendation API
  - name: Travel Budget
    description: Travel Budget API
  - name: Travel Tips
    description: Travel Tips API
  - name: Visited Place
    description: Visited Place API

paths:
  /auth/register:
    post:
      summary: Register New Account
      description: That's the API to register new account
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                username:
                  type: string
                password:
                  type: string
            examples:
              example-body:
                value:
                  name: John Doe
                  email: johndoe@mail.com
                  username: johndoe
                  password: admin123
      responses:
        "201":
          description: create new user successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      username:
                        type: string
                      password:
                        type: string
                      role:
                        type: string
                      is_verified:
                        type: boolean
              examples:
                Register user:
                  value:
                    status: true
                    message: create new user successful
                    data:
                      name: John Doe
                      email: johndoe@mail.com
                      username: johndoe
                      password: $2b$10$iemmZBsNU.n3w8cwEyW9QuXBioN5Atl/W2RNf9SURQV1Me4TSi0k.
                      role: USER
                      is_verified: false
        "409":
          description: Username or email is already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Username already exist:
                  value:
                    status: false
                    message: Email or username already exist
        "400":
          description: Password and username length
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Username length:
                  value:
                    status: false
                    message: username must be at least 6 characters
                Password length:
                  value:
                    status: false
                    message: password must be at least 8 characters
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error

  /auth/login:
    post:
      summary: Login
      description: That's the API to login
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usernameOrEmail:
                  type: string
                password:
                  type: string
            examples:
              example-body:
                value:
                  usernameOrEmail: johndoe
                  password: admin123
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                        format: email
                      username:
                        type: string
                      role:
                        type: string
                  token:
                    type: string
              examples:
                Login successful:
                  value:
                    status: true
                    message: login successful
                    data:
                      id: 1
                      email: johndoe@mail.com
                      username: johndoe
                      role: USER
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJkZWRlbnNldHlhd2FuMTdAZ21haWwuY29tIiwicm9sZSI6IkJVWUVSIiwiaWF0IjoxNjY5NDYwNTg0LCJleHAiOjE2Njk0NjQxODR9.UpEBOEZ4sVQfWhtzsdcJRUoJyROBVl8z6W528rMtYaY
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                User not found:
                  value:
                    message: user not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "401":
          description: User not verified and password not match
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Not Verified:
                  value:
                    message: you are not verified, please check your email in message box or spam and then verify your account
                Password not match:
                  value:
                    message: password not match
  /auth/forgot-password:
    post:
      summary: Forgot Password
      description: That's the API to forgot password
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
            examples:
              example-body:
                value:
                  email: johndoe@mail.com
      responses:
        "200":
          description: Forgot password successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Forgot password successful:
                  value:
                    status: true
                    message: request reset password successful
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                User not found:
                  value:
                    status: false
                    message: data not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error

# FIND TRIP
  /find-trip/create:
    post:
      summary: Create Trip
      description: That's the API to create trip
      tags:
        - Find Trip
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                city:
                  type: string
                country:
                  type: string
                departure:
                  type: string
                  format: date
                until:
                  type: string
                  format: date
                persons:
                  type: integer
                contact:
                  type: bigint
                image:
                  type: string
                  format: binary
            examples:
              example-body:
                value:
                  city: Jakarta
                  country: Indonesia
                  departure: 2021-09-30
                  until: 2021-10-01
                  persons: 6
                  contact: 6281234567890
      responses:
        "201":
          description: Create trip successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                      city:
                        type: string
                      country:
                        type: string
                      departure:
                        type: string
                        format: date
                      until:
                        type: string
                        format: date
                      persons:
                        type: integer
                      contact:
                        type: bigint
                      image:
                        type: string
              examples:
                Create trip successful:
                  value:
                    status: true
                    message: successfully create a new visited place and you got 50 XP!
                    data:
                      user_id: 1
                      city: Jakarta
                      country: Indonesia
                      departure: 2021-09-30
                      until: 2021-10-01
                      persons: 6
                      contact: 6281234567890
                      image: https://storage.googleapis.com/itinergo-storage/src/Profile.png
        "409":
          description: Trip already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Trip already exist:
                  value:
                    status: false
                    message: find trip already exist
                    data: null
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                User not found:
                  value:
                    status: false
                    message: user not found
                    data: null
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /find-trip/get-all:
    get:
      summary: Get All Trip
      description: That's the API to get all trip
      tags:
        - Find Trip
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get all trip successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        user_id:
                          type: integer
                        city:
                          type: string
                        country:
                          type: string
                        departure:
                          type: string
                          format: date-time
                        until:
                          type: string
                          format: date-time
                        persons:
                          type: integer
                        contact:
                          type: bigint
                        image:
                          type: string
                        is_available:
                          type: boolean
              examples:
                Get all trip successful:
                  value:
                    status: true
                    message: successfuly get all data find trips
                    data:
                      - id: 1
                        user_id: 1
                        city: Jakarta
                        country: Indonesia
                        departure: "2021-09-30T00:00:00.000Z"
                        until: "2021-10-01T00:00:00.000Z"
                        persons: 6
                        contact: 6281234567890
                        is_available: true
                        image: https://storage.googleapis.com/itinergo-storage/src/Profile.png
                      - id: 2
                        user_id: 2
                        city: Bandung
                        country: Indonesia
                        departure: "2021-09-30T00:00:00.000Z"
                        until: "2021-10-01T00:00:00.000Z"
                        persons: 6
                        contact: 6281234567890
                        is_available: true
                        image: https://storage.googleapis.com/itinergo-storage/src/Profile.png
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Trip Not Found:
                  value:
                    status: false
                    message: find trip not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /find-trip/get-all-id:
    get:
      summary: Get All Trip By One User
      description: That's the API to get all trip by one user
      tags:
        - Find Trip
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get all trip by user successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
              examples:
                Get all trip id successful:
                  value:
                    status: true
                    message: successfuly get all data find trips
                    data:
                      - id: 1
                      - id: 2
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Trip Not Found:
                  value:
                    status: false
                    message: find trip not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /find-trip/get-one/{id}:
    get:
      summary: Get One Trip
      description: That's the API to get one trip
      tags:
        - Find Trip
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the trip
          schema:
            type: integer
      responses:
        "200":
          description: Get one trip successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      user_id:
                        type: integer
                      city:
                        type: string
                      country:
                        type: string
                      departure:
                        type: string
                        format: date
                      until:
                        type: string
                        format: date
                      persons:
                        type: integer
                      contact:
                        type: bigint
                      image:
                        type: string
              examples:
                Get one trip successful:
                  value:
                    status: true
                    message: successfuly get data find trips
                    data:
                      id: 1
                      user_id: 1
                      city: Jakarta
                      country: Indonesia
                      departure: 2021-09-30
                      until: 2021-10-01
                      persons: 6
                      contact: 6281234567890
                      image: https://storage.googleapis.com/itinergo-storage/src/Profile.png
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Trip Not Found:
                  value:
                    status: false
                    message: find trip not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /find-trip/update/{id}:
    put:
      summary: Update Trip
      description: That's the API to update trip
      tags:
        - Find Trip
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the trip
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                city:
                  type: string
                country:
                  type: string
                departure:
                  type: string
                  format: date
                until:
                  type: string
                  format: date
                persons:
                  type: integer
                contact:
                  type: bigint
                image:
                  type: string
                  format: binary
            examples:
              example-body:
                value:
                  city: Jakarta
                  country: Indonesia
                  departure: 2021-09-30
                  until: 2021-10-01
                  persons: 6
                  contact: 6281234567890
      responses:
        "200":
          description: Update trip successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Update trip successful:
                  value:
                    status: true
                    message: successfully updated a find trip
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Trip Not Found:
                  value:
                    status: false
                    message: find trip not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "409":
          description: Trip already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Trip already exist:
                  value:
                    status: false
                    message: find trip already exist
        "500":
          description: Internal Server Error
  /find-trip/delete/{id}:
    delete:
      summary: Delete Trip
      description: That's the API to delete trip
      tags:
        - Find Trip
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the trip
          schema:
            type: integer
      responses:
        "200":
          description: Delete trip successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Delete trip successful:
                  value:
                    status: true
                    message: successfuly deleted data find trip
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Trip Not Found:
                  value:
                    status: false
                    message: find trip not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error

# Itinerary Plans
  /detail-itinerary/get-all:
    get:
      summary: Get All Itinerary Plans
      description: That's the API to get all itinerary plans
      tags:
        - Itinerary Plans
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get all itinerary plans successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        user_id:
                          type: integer
                        city:
                          type: string
                        budget:
                          type: integer
                        duration:
                          type: integer
                        preference_1:
                          type: string
                        preference_2:
                          type: string
                        is_finished:
                          type: boolean
                        detail_plans:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              itinerary_plan_id:
                                type: integer
                              dest_1:
                                type: string
                              dest_2:
                                type: string
                              dest_3:
                                type: string
                              dest_4:
                                type: string
                              dest_5:
                                type: string
                              dest_6:
                                type: string
                              dest_7:
                                type: string
                              dest_8:
                                type: string
                              dest_9:
                                type: string
                              dest_10:
                                type: string
                              dest_11:
                                type: string
                              dest_12:
                                type: string
                              dest_13:
                                type: string
                              dest_14:
                                type: string
                              dest_15:
                                type: string
                              dest_16:
                                type: string
                              dest_17:
                                type: string
                              dest_18:
                                type: string
                              dest_19:
                                type: string
                              dest_20:
                                type: string
                              dest_21:
                                type: string
                              dest_22:
                                type: string
                              dest_23:
                                type: string
                              dest_24:
                                type: string
                              dest_25:
                                type: string
                              dest_26:
                                type: string
                              dest_27:
                                type: string
                              dest_28:
                                type: string
                              dest_29:
                                type: string
                              dest_30:
                                type: string
              examples:
                Get all itinerary plans successful:
                  value:
                    status: true
                    message: successfuly get all data detail plans
                    data:
                      - id: 1
                        user_id: 1
                        city: Jakarta
                        budget: 1000000
                        duration: 5
                        preference_1: Culinary
                        preference_2: Shopping
                        is_finished: true
                        detail_plans:
                          - id: 1
                            itinerary_plan_id: 1
                            dest_1: Monas
                            dest_2: Kota Tua
                            dest_3: Taman Mini
                            dest_4: Ragunan
                            dest_5: Ancol
                            dest_6: Museum Nasional
                            dest_7: Museum Gajah
                            dest_8: Museum Wayang
                            dest_9: Museum Bank Indonesia
                            dest_10: Museum Bahari
                            dest_11: Museum Seni Rupa dan Keramik
                            dest_12: Museum Tekstil
                            dest_13: Museum Sejarah Jakarta
                            dest_14: Museum Perumusan Naskah Proklamasi
                            dest_15: Museum Joang 45
                            dest_16: null
                            dest_17: null
                            dest_18: null
                            dest_19: null
                            dest_20: null
                            dest_21: null
                            dest_22: null
                            dest_23: null
                            dest_24: null
                            dest_25: null
                            dest_26: null
                            dest_27: null
                            dest_28: null
                            dest_29: null
                            dest_30: null
                      - id: 2
                        user_id: 2
                        city: Bandung
                        budget: 1000000
                        duration: 3
                        preference_1: Culinary
                        preference_2: Shopping
                        is_finished: true
                        detail_plans:
                          - id: 2
                            itinerary_plan_id: 2
                            dest_1: Monas
                            dest_2: Kota Tua
                            dest_3: Taman Mini
                            dest_4: Ragunan
                            dest_5: Ancol
                            dest_6: Museum Nasional
                            dest_7: Museum Gajah
                            dest_8: Museum Wayang
                            dest_9: Museum Bank Indonesia
                            dest_10: null
                            dest_11: null
                            dest_12: null
                            dest_13: null
                            dest_14: null
                            dest_15: null
                            dest_16: null
                            dest_17: null
                            dest_18: null
                            dest_19: null
                            dest_20: null
                            dest_21: null
                            dest_22: null
                            dest_23: null
                            dest_24: null
                            dest_25: null
                            dest_26: null
                            dest_27: null
                            dest_28: null
                            dest_29: null
                            dest_30: null
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Itinerary Plans Not Found:
                  value:
                    status: false
                    message: itinerary plans not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /detail-itinerary/get-one/{id}:
    get:
      summary: Get One Itinerary Plans
      description: That's the API to get one itinerary plans
      tags:
        - Itinerary Plans
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the itinerary plans
          schema:
            type: integer
      responses:
        "200":
          description: Get one itinerary plans successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      user_id:
                        type: integer
                      city:
                        type: string
                      budget:
                        type: integer
                      duration:
                        type: integer
                      preference_1:
                        type: string
                      preference_2:
                        type: string
                      is_finished:
                        type: boolean
                      detail_plans:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            itinerary_plan_id:
                              type: integer
                            dest_1:
                              type: string
                            dest_2:
                              type: string
                            dest_3:
                              type: string
                            dest_4:
                              type: string
                            dest_5:
                              type: string
                            dest_6:
                              type: string
                            dest_7:
                              type: string
                            dest_8:
                              type: string
                            dest_9:
                              type: string
                            dest_10:
                              type: string
                            dest_11:
                              type: string
                            dest_12:
                              type: string
                            dest_13:
                              type: string
                            dest_14:
                              type: string
                            dest_15:
                              type: string
                            dest_16:
                              type: string
                            dest_17:
                              type: string
                            dest_18:
                              type: string
                            dest_19:
                              type: string
                            dest_20:
                              type: string
                            dest_21:
                              type: string
                            dest_22:
                              type: string
                            dest_23:
                              type: string
                            dest_24:
                              type: string
                            dest_25:
                              type: string
                            dest_26:
                              type: string
                            dest_27:
                              type: string
                            dest_28:
                              type: string
                            dest_29:
                              type: string
                            dest_30:
                              type: string
              examples:
                Get one itinerary plans successful:
                  value:
                    status: true
                    message: successfuly get data detail plans
                    data:
                      id: 1
                      user_id: 1
                      city: Jakarta
                      budget: 1000000
                      duration: 5
                      preference_1: Culinary
                      preference_2: Shopping
                      is_finished: true
                      detail_plans:
                        - id: 1
                          itinerary_plan_id: 1
                          dest_1: Monas
                          dest_2: Kota Tua
                          dest_3: Taman Mini
                          dest_4: Ragunan
                          dest_5: Ancol
                          dest_6: Museum Nasional
                          dest_7: Museum Gajah
                          dest_8: Museum Wayang
                          dest_9: Museum Bank Indonesia
                          dest_10: Museum Bahari
                          dest_11: Museum Seni Rupa dan Keramik
                          dest_12: Museum Tekstil
                          dest_13: Museum Sejarah Jakarta
                          dest_14: Museum Perumusan Naskah Proklamasi
                          dest_15: Museum Joang 45
                          dest_16: null
                          dest_17: null
                          dest_18: null
                          dest_19: null
                          dest_20: null
                          dest_21: null
                          dest_22: null
                          dest_23: null
                          dest_24: null
                          dest_25: null
                          dest_26: null
                          dest_27: null
                          dest_28: null
                          dest_29: null
                          dest_30: null
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Itinerary Plans Not Found:
                  value:
                    status: false
                    message: itinerary plans not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /detail-itinerary/update/{id}:
    put:
      summary: Get point when user finish trip
      description: That's the API to get point when user finish trip
      tags:
        - Itinerary Plans
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the itinerary plans
          schema:
            type: integer
      responses:
        "201":
          description: Finish trip
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Finish trip:
                  value:
                    status: true
                    message: congrats you have been finished this trip and you got 150 XP!
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Itinerary Plans Not Found:
                  value:
                    status: false
                    message: plan not found
                    data: null
                User Not Found:
                  value:
                    status: false
                    message: user not found
                    data: null
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error

# Level Travelers
  /level-traveler/create:
    post:
      summary: Create Level Traveler
      description: That's the API to create level traveler
      tags:
        - Level Travelers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              name:
                type: string
              badge:
                type: string
            examples:
              example-body:
                value:
                  name: Beginner
                  badge: null
      responses:
        "201":
          description: Create level traveler successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Create level traveler successful:
                  value:
                    status: true
                    message: successfuly create a new level traveler
                    data:
                      name: Beginner
                      badge: null
        "409":
          description: Level traveler already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Name already exist:
                  value:
                    status: false
                    message: name already exist
        "500":
          description: Internal Server Error
  /level-traveler/get-all:
    get:
      summary: Get All Level Traveler
      description: That's the API to get all level traveler
      tags:
        - Level Travelers
      responses:
        "200":
          description: Get all level traveler successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        badge:
                          type: string
              examples:
                Get all level traveler successful:
                  value:
                    status: true
                    message: successfuly get all data level traveler
                    data:
                      - id: 1
                        name: Beginner
                        badge: null
                      - id: 2
                        name: Intermediate
                        badge: null
                      - id: 3
                        name: Advanced
                        badge: null
                      - id: 4
                        name: Expert
                        badge: null
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Level Traveler Not Found:
                  value:
                    status: false
                    message: level traveler not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /level-traveler/get-one/{id}:
    get:
      summary: Get One Level Traveler
      description: That's the API to get one level traveler
      tags:
        - Level Travelers
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the level traveler
          schema:
            type: integer
      responses:
        "200":
          description: Get one level traveler successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      badge:
                        type: string
              examples:
                Get one level traveler successful:
                  value:
                    status: true
                    message: successfuly get data level traveler
                    data:
                      id: 1
                      name: Beginner
                      badge: null
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Level Traveler Not Found:
                  value:
                    status: false
                    message: level traveler not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /level-traveler/update/{id}:
    put:
      summary: Update Level Traveler
      description: That's the API to update level traveler
      tags:
        - Level Travelers
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the level traveler
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              name:
                type: string
              badge:
                type: string
            examples:
              example-body:
                value:
                  name: Beginner
                  badge: null
      responses:
        "200":
          description: Update level traveler successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Update level traveler successful:
                  value:
                    status: true
                    message: successfuly update data level traveler
        "409":
          description: Level traveler already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Name already exist:
                  value:
                    status: false
                    message: name already exist
        "500":
          description: Internal Server Error
  /level-traveler/delete/{id}:
    delete:
      summary: Delete Level Traveler
      description: That's the API to delete level traveler
      tags:
        - Level Travelers
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the level traveler
          schema:
            type: integer
      responses:
        "200":
          description: Delete level traveler successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Delete level traveler successful:
                  value:
                    status: true
                    message: successfuly delete data level traveler
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Level Traveler Not Found:
                  value:
                    status: false
                    message: level traveler not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error

# Profile
  /account/getAccount:
    get:
      summary: Get Account
      description: That's the API to get account
      tags:
        - Profile
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get account successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      email_token:
                        type: string
                      username:
                        type: string
                      address:
                        type: string
                      images:
                        type: string
                      phone:
                        type: bigint
                      role:
                        type: string
                      is_verified:
                        type: boolean
                      level_traveler:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          badge:
                            type: string
              examples:
                Get account successful:
                  value:
                    status: true
                    message: successfuly get data Account
                    data:
                      id: 1
                      name: John Doe
                      email: johndoe@gmail.com
                      email_token: bbd8b9e682322c6c04878f6b0ec049123f1db119e04cdefbe0bcba2d56
                      username: johndoe
                      address: Jakarta
                      images: https://storage.googleapis.com/itinergo-storage/src/Profile.png
                      phone: 6281234567890
                      role: USER
                      is_verified: true
                      level_traveler:
                        id: 1
                        name: Beginner
                        badge: null
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Account Not Found:
                  value:
                    status: false
                    message: account not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /account/updateAccount:
    put:
      summary: Update Account
      description: That's the API to update account
      tags:
        - Profile
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                images:
                  type: string
                  format: binary
            examples:
              example-body:
                value:
                  name: John Doe
                  email: johndoe@gmail.com
      responses:
        "200":
          description: Update account successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Update account successful:
                  value:
                    status: true
                    message: Account has been updated
        "409":
          description: Email already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Email already exist:
                  value:
                    status: false
                    message: email already exist
        "500":
          description: Internal Server Error
  /account/updatePassword:
    put:
      summary: Update Password
      description: That's the API to update password
      tags:
        - Profile
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
            examples:
              example-body:
                value:
                  old_password: 123456
                  new_password: 1234567
      responses:
        "200":
          description: Update password successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Update password successful:
                  value:
                    status: true
                    message: Password updated
        "400":
          description: 8 characters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                8 characters:
                  value:
                    status: false
                    message: password must be at least 8 characters
        "401":
          description: Password not match
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Password not match:
                  value:
                    status: false
                    message: password is wrong
        "500":
          description: Internal Server Error

# Recommendation
  /itinerary/predict:
    post:
      summary: Get Recommendation
      description: That's the API to get recommendation
      tags:
        - Recommendation System
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                city:
                  type: string
                budget:
                  type: integer
                duration:
                  type: integer
                user_preferences_1:
                  type: string
                user_preferences_2:
                  type: string
            examples:
              example-body:
                value:
                  city: bandung
                  budget: 100000
                  duration: 1
                  user_preferences_1: wisata
                  user_preferences_2: alam
      responses:
        "200":
          description: Get recommendation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      day-1:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            place_name:
                              type: string
              examples:
                Get recommendation successful:
                  value:
                    status: true
                    message: successfuly get data recommendation
                    data:
                      day-1:
                        - id: 1
                          place_name: Monas
                        - id: 2
                          place_name: Kota Tua
                        - id: 3
                          place_name: Taman Mini
        "404": 
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples: 
                Data Not Found:
                  value:
                    status: false
                    message: data not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /itinerary/get-recomend:
    get:
      summary: Get Recommendation
      description: That's the API to get recommendation
      tags:
        - Recommendation System
      security:
        - bearerAuth: []
      parameters:
        - name: place_name
          in: query
          required: true
          description: Name of the place
          schema:
            type: string
      responses:
        "200":
          description: Get recommendation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        place_name:
                          type: string
                        description:
                          type: string
                        category:
                          type: string
                        city:
                          type: string
                        province:
                          type: string
                        price:
                          type: integer
                        rating:
                          type: float
                        coordinate:
                          type: string
                        lat:
                          type: float
                        long:
                          type: float
                        metadata:
                          type: string
                        dir:
                          type: string
                        metadata_tokenized:
                          type: string
              examples:
                Get recommendation successful:
                  value:
                    status: true
                    message: Success
                    data:
                      - id: 1
                        place_name: Taman Film
                        description: Taman Film adalah salah satu taman tematik dan ruang terbuka publik di Kota Bandung yang terletak di bawah Jembatan Pasupati, Bandung, Jawa Barat. Taman ini diresmikan oleh Wali kota Bandung, Ridwan Kamil, pada tanggal 14 September 2014. Taman ini memiliki konsep bioskop terbuka yang modern agar warga dapat beraktivitas di taman dan mendapat sarana menonton film secara gratis. Taman Film dikelola Komunitas Film Bandung dan Dinas Pertamanan Kota Bandung.
                        category: Tempat Rekreasi
                        city: Bandung
                        province: Jawa Barat
                        price: 0
                        rating: 4.5
                        coordinate: "{-6.1753924,106.8271528}"
                        lat: -6.1753924
                        long: 106.8271528
                        metadata: taman film tempat rekreasi taman film adalah salah satu taman tematik dan ruang terbuka publik di kota bandung yang terletak di bawah jembatan pasupati, bandung, jawa barat. taman ini diresmikan oleh wali kota bandung, ridwan kamil, pada tanggal 14 september 2014. taman ini memiliki konsep bioskop terbuka yang modern agar warga dapat beraktivitas di taman dan mendapat sarana menonton film secara gratis. taman film dikelola komunitas film bandung dan dinas pertamanan kota bandung. bandung
                        dir: https://storage.googleapis.com/itinergo-storage/src/Monas.jpg
                        metadata_tokenized: taman film tempat rekreasi taman film adalah salah satu taman tematik dan ruang terbuka publik di kota bandung yang terletak di bawah jembatan pasupati, bandung, jawa barat. taman ini diresmikan oleh wali kota bandung, ridwan kamil, pada tanggal 14 september 2014. taman ini memiliki konsep bioskop terbuka yang modern agar warga dapat beraktivitas di taman dan mendapat sarana menonton film secara gratis. taman film dikelola komunitas film bandung dan dinas pertamanan kota bandung. bandung
        "404": 
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples: 
                Data Not Found:
                  value:
                    status: false
                    message: data not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /itinerary/calc-carbon:
    get:
      summary: Get Carbon Footprint
      description: That's the API to get carbon footprint
      tags:
        - Recommendation System
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get carbon footprint successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      car_price:
                        type: integer
                      car_co2:
                        type: string
                      bus_price:
                        type: integer
                      bus_co2:
                        type: string
                      motorbike_price:
                        type: integer
                      motorbike_co2:
                        type: string
                      total_distance:
                        type: integer
                      total_budget:
                        type: integer
                      total_days:
                        type: integer
                      total_places:
                        type: integer
              examples:
                Get carbon footprint successful:
                  value:
                    status: true
                    message: success
                    data:
                      car_price: 100000
                      car_co2: 21.90 kg CO2
                      bus_price: 5000
                      bus_co2: 21.90 kg CO2
                      motorbike_price: 12000
                      motorbike_co2: 13.68 kg CO2
                      total_distance: 133
                      total_budget: 100000
                      total_days: 1
                      total_places: 3
        "404": 
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples: 
                Data Not Found:
                  value:
                    status: false
                    message: data not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error

# Travel budget
  /travel-budgets/create:
    post:
      summary: Create Travel Budget
      description: That's the API to create travel budget
      tags:
        - Travel Budget
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              budget_name:
                type: string
              target:
                type: integer
              flight:
                type: integer
              attractions:
                type: integer
              stay:
                type: integer
              shopping:
                type: integer
              food:
                type: integer
              others:
                type: integer
            examples:
              example-body:
                value:
                  budget_name: Budget 1
                  target: 1000000
                  flight: 100000
                  attractions: 100000
                  stay: 100000
                  shopping: 100000
                  food: 100000
                  others: 100000
      responses:
        "201":
          description: Create travel budget successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      budget_name:
                        type: string
                      target:
                        type: integer
                      flight:
                        type: integer
                      attractions:
                        type: integer
                      stay:
                        type: integer
                      shopping:
                        type: integer
                      food:
                        type: integer
                      others:
                        type: integer
              examples:
                Create travel budget successful:
                  value:
                    status: true
                    message: successfully created a travel budget
                    data:
                      budget_name: Budget 1
                      target: 1000000
                      flight: 100000
                      attractions: 100000
                      stay: 100000
                      shopping: 100000
                      food: 100000
                      others: 100000
        "409":
          description: Budget name already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Travel budget already exist:
                  value:
                    status: false
                    message: budget name already exist
        "404": 
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples: 
                Data Not Found:
                  value:
                    status: false
                    message: data not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /travel-budgets/get-all:
    get:
      summary: Get All Travel Budget
      description: That's the API to get all travel budget
      tags:
        - Travel Budget
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get all travel budget successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        budget_name:
                          type: string
                        target:
                          type: integer
                        flight:
                          type: integer
                        attractions:
                          type: integer
                        stay:
                          type: integer
                        shopping:
                          type: integer
                        food:
                          type: integer
                        others:
                          type: integer
              examples:
                Get all travel budget successful:
                  value:
                    status: true
                    message: successfuly get all data travel budget
                    data:
                      - id: 1
                        budget_name: Budget 1
                        target: 1000000
                        flight: 100000
                        attractions: 100000
                        stay: 100000
                        shopping: 100000
                        food: 100000
                        others: 100000
                      - id: 2
                        budget_name: Budget 2
                        target: 2000000
                        flight: 200000
                        attractions: 200000
                        stay: 200000
                        shopping: 200000
                        food: 200000
                        others: 200000
                      - id: 3
                        budget_name: Budget 3
                        target: 3000000
                        flight: 300000
                        attractions: 300000
                        stay: 300000
                        shopping: 300000
                        food: 300000
                        others: 300000
                      - id: 4
                        budget_name: Budget 4
                        target: 4000000
                        flight: 400000
                        attractions: 400000
                        stay: 400000
                        shopping: 400000
                        food: 400000
                        others: 400000
                      - id: 5
                        budget_name: Budget 5
                        target: 5000000
                        flight: 500000
                        attractions:
  /travel-budgets/get-one/{id}:
    get:
      summary: Get One Travel Budget
      description: That's the API to get one travel budget
      tags:
        - Travel Budget
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the travel budget
          schema:
            type: integer
      responses:
        "200":
          description: Get one travel budget successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      budget_name:
                        type: string
                      target:
                        type: integer
                      flight:
                        type: integer
                      attractions:
                        type: integer
                      stay:
                        type: integer
                      shopping:
                        type: integer
                      food:
                        type: integer
                      others:
                        type: integer
              examples:
                Get one travel budget successful:
                  value:
                    status: true
                    message: successfuly get all data travel budget
                    data:
                      id: 1
                      budget_name: Budget 1
                      target: 1000000
                      flight: 100000
                      attractions: 100000
                      stay: 100000
                      shopping: 100000
                      food: 100000
                      others: 100000
        "404": 
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples: 
                Data Not Found:
                  value:
                    status: false
                    message: Travel Budget not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /travel-budgets/update/{id}:
    put:
      summary: Update Travel Budget
      description: That's the API to update travel budget
      tags:
        - Travel Budget
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the travel budget
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              budget_name:
                type: string
              target:
                type: integer
              flight:
                type: integer
              attractions:
                type: integer
              stay:
                type: integer
              shopping:
                type: integer
              food:
                type: integer
              others:
                type: integer
            examples:
              example-body:
                value:
                  budget_name: Budget 1
                  target: 1000000
                  flight: 100000
                  attractions: 100000
                  stay: 100000
                  shopping: 100000
                  food: 100000
                  others: 100000
      responses:
        "200":
          description: Update travel budget successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Update travel budget successful:
                  value:
                    status: true
                    message: successfuly update a travel budget
        "409":
          description: Budget name already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Travel budget already exist:
                  value:
                    status: false
                    message: budget name already exist
        "500":
          description: Internal Server Error
  /travel-budgets/delete/{id}:
    delete:
      summary: Delete Travel Budget
      description: That's the API to delete travel budget
      tags:
        - Travel Budget
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the travel budget
          schema:
            type: integer
      responses:
        "200":
          description: Delete travel budget successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Delete travel budget successful:
                  value:
                    status: true
                    message: successfuly delete a travel budget
        "404": 
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples: 
                Data Not Found:
                  value:
                    status: false
                    message: budget name not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error

# Travel Tips
  /travel-tips/get-all:
    get:
      summary: Get All Travel Tips
      description: That's the API to get all travel tips
      tags:
        - Travel Tips
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get all travel tips successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        user_id:
                          type: integer
                        author:
                          type: string
                        title:
                          type: string
                        contents:
                          type: string
                        image_cover:
                          type: string
                        image_1:
                          type: string
                        image_2:
                          type: string
                        image_3:
                          type: string
                        image_4:
                          type: string
                        image_5:
                          type: string
                        total_views:
                          type: integer
              examples:
                Get all travel tips successful:
                  value:
                    status: true
                    message: successfuly get all data Travel Tips
                    data:
                      - id: 4
                        user_id: 1
                        author: John Doe
                        title: Traveling to Bandung
                        contents: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl eget ultricies aliquam, nunc nisl ultric
                        image_cover: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_1: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_2: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_3: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_4: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_5: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        total_views: 3
                      - id: 1
                        user_id: 1
                        author: John Doe
                        title: Traveling to Semarang
                        contents: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl eget ultricies aliquam, nunc nisl ultric
                        image_cover: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_1: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_2: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_3: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_4: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_5: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        total_views: 10
        "404": 
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples: 
                Data Not Found:
                  value:
                    status: false
                    message: Travel Tips not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /travel-tips/get-one/{id}:
    get:
      summary: Get One Travel Tips
      description: That's the API to get one travel tips
      tags:
        - Travel Tips
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the travel tips
          schema:
            type: integer
      responses:
        "200":
          description: Get one travel tips successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      user_id:
                          type: integer
                      author:
                        type: string
                      title:
                        type: string
                      contents:
                        type: string
                      image_cover:
                        type: string
                      image_1:
                        type: string
                      image_2:
                        type: string
                      image_3:
                        type: string
                      image_4:
                        type: string
                      image_5:
                        type: string
                      total_views:
                        type: integer
              examples:
                Get one travel tips successful:
                  value:
                    status: true
                    message: successfuly get data Travel Tips
                    data:
                      id: 2
                      user_id: 1
                      author: John Doe
                      title: Traveling to Semarang
                      contents: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl eget ultricies aliquam, nunc nisl ultric
                      image_cover: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                      image_1: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                      image_2: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                      image_3: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                      image_4: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                      image_5: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                      total_views: 10
        "404": 
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples: 
                Data Not Found:
                  value:
                    status: false
                    message: Travel Tips not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /travel-tips/most-views:
    get:
      summary: Get Most Views Travel Tips
      description: That's the API to get most views travel tips
      tags:
        - Travel Tips
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get most views travel tips successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        user_id:
                          type: integer
                        author:
                          type: string
                        title:
                          type: string
                        contents:
                          type: string
                        image_cover:
                          type: string
                        image_1:
                          type: string
                        image_2:
                          type: string
                        image_3:
                          type: string
                        image_4:
                          type: string
                        image_5:
                          type: string
                        total_views:
                          type: integer
              examples:
                Get most views travel tips successful:
                  value:
                    status: true
                    message: successfuly get all data Travel Tips
                    data:
                      - id: 4
                        user_id: 1
                        author: John Doe
                        title: Traveling to Bandung
                        contents: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl eget ultricies aliquam, nunc nisl ultric
                        image_cover: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_1: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_2: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_3: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_4: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_5: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        total_views: 30
                      - id: 1
                        user_id: 1
                        author: John Doe
                        title: Traveling to Semarang
                        contents: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl eget ultricies aliquam, nunc nisl ultric
                        image_cover: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_1: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_2: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_3: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_4: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        image_5: https://storage.googleapis.com/itinergo-storage/src/TravelTips1.jpg
                        total_views: 10
        "404": 
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples: 
                Data Not Found:
                  value:
                    status: false
                    message: Travel Tips not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error

# Visited Place
  /visited-places/create:
    post:
      summary: Create Visited Place
      description: That's the API to create visited place
      tags:
        - Visited Place
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                country:
                  type: string
                city:
                  type: string
                month:
                  type: string
                year:
                  type: integer
                image:
                  type: string
                  format: binary
              examples:
                example-body:
                  value:
                    country: Indonesia
                    city: Bandung
                    month: January
                    year: 2021
                    image: https://storage.googleapis.com/itinergo-storage/src/VisitedPlace1.jpg
      responses:
        "201":
          description: Create visited place successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      country:
                        type: string
                      city:
                        type: string
                      month:
                        type: string
                      year:
                        type: integer
                      image:
                        type: string
              examples:
                Create visited place successful:
                  value:
                    status: true
                    message: successfully create a new visited place and you got 100 XP!
                    data:
                      country: Indonesia
                      city: Bandung
                      month: January
                      year: 2021
                      image: https://storage.googleapis.com/itinergo-storage/src/VisitedPlace1.jpg
        "404": 
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples: 
                Data Not Found:
                  value:
                    status: false
                    message: user not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /visited-places/get-all:
    get:
      summary: Get All Visited Place
      description: That's the API to get all visited place
      tags:
        - Visited Place
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get all visited place successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        country:
                          type: string
                        city:
                          type: string
                        month:
                          type: string
                        year:
                          type: integer
                        image:
                          type: string
              examples:
                Get all visited place successful:
                  value:
                    status: true
                    message: successfuly get all data visited place
                    data:
                      - id: 1
                        country: Indonesia
                        city: Bandung
                        month: January
                        year: 2021
                        image: https://storage.googleapis.com/itinergo-storage/src/VisitedPlace1.jpg
                      - id: 2
                        country: Indonesia
                        city: Jakarta
                        month: February
                        year: 2021
                        image: https://storage.googleapis.com/itinergo-storage/src/VisitedPlace2.jpg
                      - id: 3
                        country: Indonesia
                        city: Surabaya
                        month: March
                        year: 2021
                        image: https://storage.googleapis.com/itinergo-storage/src/VisitedPlace3.jpg
                      - id: 4
                        country: Indonesia
                        city: Semarang
                        month: April
                        year: 2021
                        image: https://storage.googleapis.com/itinergo-storage/src/VisitedPlace4.jpg
                      - id: 5
                        country: Indonesia
                        city: Yogyakarta
                        month: May
                        year: 2021
                        image: https://storage.googleapis.com/itinergo-storage/src/VisitedPlace5.jpg
        "404": 
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    examples: 
                      Data Not Found:
                        value:
                          status: false
                          message: user not found
                      Not Found:
                        value:
                          status: false
                          message: are you lost?
        "500":
          description: Internal Server Error
  /visited-places/get-one/{id}:
    get:
      summary: Get One Visited Place
      description: That's the API to get one visited place
      tags:
        - Visited Place
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the visited place
          schema:
            type: integer
      responses:
        "200":
          description: Get one visited place successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    examples: 
                      Data Not Found:
                        value:
                          status: false
                          message: user not found
                      Not Found:
                        value:
                          status: false
                          message: are you lost?
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      country:
                        type: string
                      city:
                        type: string
                      month:
                        type: string
                      year:
                        type: integer
                      image:
                        type: string
              examples:
                Get one visited place successful:
                  value:
                    status: true
                    message: successfuly get data visited place
                    data:
                      id: 1
                      country: Indonesia
                      city: Bandung
                      month: January
                      year: 2021
                      image: https://storage.googleapis.com/itinergo-storage/src/VisitedPlace1.jpg
        "404": 
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    examples: 
                      Data Not Found:
                        value:
                          status: false
                          message: user not found
                      Not Found:
                        value:
                          status: false
                          message: are you lost?
        "500":
          description: Internal Server Error
  /visited-places/update/{id}:
    put:
      summary: Update Visited Place
      description: That's the API to update visited place
      tags:
        - Visited Place
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the visited place
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                country:
                  type: string
                city:
                  type: string
                month:
                  type: string
                year:
                  type: integer
                image:
                  type: string
                  format: binary
              examples:
                example-body:
                  value:
                    country: Indonesia
                    city: Bandung
                    month: January
                    year: 2021
                    image: https://storage.googleapis.com/itinergo-storage/src/VisitedPlace1.jpg
      responses:
        "200":
          description: Update visited place successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    examples: 
                      Data Not Found:
                        value:
                          status: false
                          message: user not found
                      Not Found:
                        value:
                          status: false
                          message: are you lost?
              examples:
                Update visited place successful:
                  value:
                    status: true
                    message: successfully update a visited place
        "500":
          description: Internal Server Error
  /visited-places/delete/{id}:
    delete:
      summary: Delete Visited Place
      description: That's the API to delete visited place
      tags:
        - Visited Place
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the visited place
          schema:
            type: integer
      responses:
        "200":
          description: Delete visited place successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    examples: 
                      Data Not Found:
                        value:
                          status: false
                          message: user not found
                      Not Found:
                        value:
                          status: false
                          message: are you lost?
              examples:
                Delete visited place successful:
                  value:
                    status: true
                    message: successfully delete a visited place
        "500":
          description: Internal Server Error
  /visited-places/count-by-city:
    get:
      summary: Count Visited Place By City
      description: That's the API to count visited place by city
      tags:
        - Visited Place
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Count visited place by city successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    examples: 
                      Data Not Found:
                        value:
                          status: false
                          message: user not found
                      Not Found:
                        value:
                          status: false
                          message: are you lost?
                  data:
                    type: object
                    properties:
                      
                      city:
                        type: array
                        items:
                          type: object
                          properties:
                            city:
                              type: string
                            count:
                              type: integer
                      count:
                        type: integer
              examples:
                Count visited place by city successful:
                  value:
                    status: true
                    message: successfully count visited place by city
                    data:
                      
                      city:
                        - city: Bandung
                          count: 1
                        - city: Jakarta
                          count: 2
                        - city: Surabaya
                          count: 3
                        - city: Semarang
                          count: 4
                        - city: Yogyakarta
                          count: 5
                      count: 5
        "500":
          description: Internal Server Error
  /visited-places/count-by-country:
    get:
      summary: Count Visited Place By Country
      description: That's the API to count visited place by country
      tags:
        - Visited Place
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Count visited place by city successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    examples: 
                      Data Not Found:
                        value:
                          status: false
                          message: user not found
                      Not Found:
                        value:
                          status: false
                          message: are you lost?
                  data:
                    type: object
                    properties:
                      country:
                        type: array
                        items:
                          type: object
                          properties:
                            country:
                              type: string
                            count:
                              type: integer
                      count:
                        type: integer
              examples:
                Count visited place by country successful:
                  value:
                    status: true
                    message: successfully count visited place by country
                    data:
                      
                      country:
                        - country: Indonesia
                          count: 16
                      count: 1
        "500":
          description: Internal Server Error

components:
  schemas: {}
  securitySchemes:
    bearerAuth:            # arbitrary name for the security schema
      type: http
      scheme: bearer
      bearerFormat: JWT