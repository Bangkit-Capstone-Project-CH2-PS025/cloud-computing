openapi: 3.1.0
info:
  title: Itinergo API
  description: Welcome to Itinergo API Documentation
  version: 0.0.1

servers:
  - url: http://localhost:8000
    description: Localhost
  - url: http://35.184.3.42:3000
    description: Deployment

tags:
  - name: Authentication
    description: Authentication API
  - name: Find Trip
    description: Find Trip API

paths:
  /auth/register:
    post:
      summary: Register New Account
      description: That's the API to register new account
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                username:
                  type: string
                password:
                  type: string
            examples:
              example-body:
                value:
                  name: John Doe
                  email: johndoe@mail.com
                  username: johndoe
                  password: admin123
      responses:
        "201":
          description: create new user successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      username:
                        type: string
                      password:
                        type: string
                      role:
                        type: string
                      is_verified:
                        type: boolean
              examples:
                Register user:
                  value:
                    status: true
                    message: create new user successful
                    data:
                      name: John Doe
                      email: johndoe@mail.com
                      username: johndoe
                      password: $2b$10$iemmZBsNU.n3w8cwEyW9QuXBioN5Atl/W2RNf9SURQV1Me4TSi0k.
                      role: USER
                      is_verified: false
        "409":
          description: Username or email is already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Username already exist:
                  value:
                    status: false
                    message: Email or username already exist
        "400":
          description: Password and username length
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Username length:
                  value:
                    status: false
                    message: username must be at least 6 characters
                Password length:
                  value:
                    status: false
                    message: password must be at least 8 characters
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error

  /auth/login:
    post:
      summary: Login
      description: That's the API to login
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usernameOrEmail:
                  type: string
                password:
                  type: string
            examples:
              example-body:
                value:
                  usernameOrEmail: johndoe
                  password: admin123
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                        format: email
                      username:
                        type: string
                      role:
                        type: string
                  token:
                    type: string
              examples:
                Login successful:
                  value:
                    status: true
                    message: login successful
                    data:
                      id: 1
                      email: johndoe@mail.com
                      username: johndoe
                      role: USER
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJkZWRlbnNldHlhd2FuMTdAZ21haWwuY29tIiwicm9sZSI6IkJVWUVSIiwiaWF0IjoxNjY5NDYwNTg0LCJleHAiOjE2Njk0NjQxODR9.UpEBOEZ4sVQfWhtzsdcJRUoJyROBVl8z6W528rMtYaY
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                User not found:
                  value:
                    message: user not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "401":
          description: User not verified and password not match
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Not Verified:
                  value:
                    message: you are not verified, please check your email in message box or spam and then verify your account
                Password not match:
                  value:
                    message: password not match
  /auth/forgot-password:
    post:
      summary: Forgot Password
      description: That's the API to forgot password
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
            examples:
              example-body:
                value:
                  email: johndoe@mail.com
      responses:
        "200":
          description: Forgot password successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Forgot password successful:
                  value:
                    status: true
                    message: request reset password successful
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                User not found:
                  value:
                    status: false
                    message: data not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error

# FIND TRIP
  /find-trip/create:
    post:
      summary: Create Trip
      description: That's the API to create trip
      tags:
        - Find Trip
      security:
        bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                city:
                  type: string
                country:
                  type: string
                departure:
                  type: string
                  format: date
                until:
                  type: string
                  format: date
                persons:
                  type: integer
                contact:
                  type: bigint
                image:
                  type: string
                  format: binary
            examples:
              example-body:
                value:
                  city: Jakarta
                  country: Indonesia
                  departure: 2021-09-30
                  until: 2021-10-01
                  persons: 6
                  contact: 6281234567890
      responses:
        "201":
          description: Create trip successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                      city:
                        type: string
                      country:
                        type: string
                      departure:
                        type: string
                        format: date
                      until:
                        type: string
                        format: date
                      persons:
                        type: integer
                      contact:
                        type: bigint
                      image:
                        type: string
              examples:
                Create trip successful:
                  value:
                    status: true
                    message: successfully create a new visited place and you got 50 XP!
                    data:
                      user_id: 1
                      city: Jakarta
                      country: Indonesia
                      departure: 2021-09-30
                      until: 2021-10-01
                      persons: 6
                      contact: 6281234567890
                      image: https://storage.googleapis.com/itinergo-storage/src/Profile.png
        "409":
          description: Trip already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Trip already exist:
                  value:
                    status: false
                    message: find trip already exist
                    data: null
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                User not found:
                  value:
                    status: false
                    message: user not found
                    data: null
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /find-trip/get-all:
    get:
      summary: Get All Trip
      description: That's the API to get all trip
      tags:
        - Find Trip
      security:
        bearerAuth: []
      responses:
        "200":
          description: Get all trip successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        user_id:
                          type: integer
                        city:
                          type: string
                        country:
                          type: string
                        departure:
                          type: string
                          format: date
                        until:
                          type: string
                          format: date
                        persons:
                          type: integer
                        contact:
                          type: bigint
                        image:
                          type: string
              examples:
                Get all trip successful:
                  value:
                    status: true
                    message: successfuly get all data find trips
                    data:
                      - id: 1
                        user_id: 1
                        city: Jakarta
                        country: Indonesia
                        departure: 2021-09-30
                        until: 2021-10-01
                        persons: 6
                        contact: 6281234567890
                        image: https://storage.googleapis.com/itinergo-storage/src/Profile.png
                      - id: 2
                        user_id: 2
                        city: Bandung
                        country: Indonesia
                        departure: 2021-09-30
                        until: 2021-10-01
                        persons: 6
                        contact: 6281234567890
                        image: https://storage.googleapis.com/itinergo-storage/src/Profile.png
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Trip Not Found:
                  value:
                    status: false
                    message: find trip not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /find-trip/get-all-id:
    get:
      summary: Get All Trip By One User
      description: That's the API to get all trip by one user
      tags:
        - Find Trip
      security:
        bearerAuth: []
      responses:
        "200":
          description: Get all trip by user successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
              examples:
                Get all trip id successful:
                  value:
                    status: true
                    message: successfuly get all data find trips
                    data:
                      - id: 1
                      - id: 2
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Trip Not Found:
                  value:
                    status: false
                    message: find trip not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /find-trip/get-one/{id}:
    get:
      summary: Get One Trip
      description: That's the API to get one trip
      tags:
        - Find Trip
      security:
        bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the trip
          schema:
            type: integer
      responses:
        "200":
          description: Get one trip successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      user_id:
                        type: integer
                      city:
                        type: string
                      country:
                        type: string
                      departure:
                        type: string
                        format: date
                      until:
                        type: string
                        format: date
                      persons:
                        type: integer
                      contact:
                        type: bigint
                      image:
                        type: string
              examples:
                Get one trip successful:
                  value:
                    status: true
                    message: successfuly get data find trips
                    data:
                      id: 1
                      user_id: 1
                      city: Jakarta
                      country: Indonesia
                      departure: 2021-09-30
                      until: 2021-10-01
                      persons: 6
                      contact: 6281234567890
                      image: https://storage.googleapis.com/itinergo-storage/src/Profile.png
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Trip Not Found:
                  value:
                    status: false
                    message: find trip not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error
  /find-trip/update/{id}:
    put:
      summary: Update Trip
      description: That's the API to update trip
      tags:
        - Find Trip
      security:
        bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the trip
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                city:
                  type: string
                country:
                  type: string
                departure:
                  type: string
                  format: date
                until:
                  type: string
                  format: date
                persons:
                  type: integer
                contact:
                  type: bigint
                image:
                  type: string
                  format: binary
            examples:
              example-body:
                value:
                  city: Jakarta
                  country: Indonesia
                  departure: 2021-09-30
                  until: 2021-10-01
                  persons: 6
                  contact: 6281234567890
      responses:
        "200":
          description: Update trip successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Update trip successful:
                  value:
                    status: true
                    message: successfully updated a find trip
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Trip Not Found:
                  value:
                    status: false
                    message: find trip not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "409":
          description: Trip already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Trip already exist:
                  value:
                    status: false
                    message: find trip already exist
        "500":
          description: Internal Server Error
  /find-trip/delete/{id}:
    delete:
      summary: Delete Trip
      description: That's the API to delete trip
      tags:
        - Find Trip
      security:
        bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the trip
          schema:
            type: integer
      responses:
        "200":
          description: Delete trip successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Delete trip successful:
                  value:
                    status: true
                    message: successfuly deleted data find trip
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Trip Not Found:
                  value:
                    status: false
                    message: find trip not found
                Not Found:
                  value:
                    status: false
                    message: are you lost?
        "500":
          description: Internal Server Error



components:
  schemas: {}
  securitySchemes:
    bearerAuth:            # arbitrary name for the security schema
      type: http
      scheme: bearer